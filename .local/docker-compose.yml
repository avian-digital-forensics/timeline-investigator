version: '2.4'
services:
  ti-api:
    build:
      context: ../
      dockerfile: Dockerfile
    image: timeline-investigator:local
    container_name: ti-api
    depends_on: 
      elasticsearch:
        condition: service_healthy
    environment:
      - AUTH_CREDENTIALS=${AUTH_CREDENTIALS}
      - AUTH_CREDENTIALS_FILE=${AUTH_CREDENTIALS_FILE}
      - AUTH_API_KEY=${AUTH_API_KEY}
      - TEST_SECRET=super-secret
    ports:
      - "8080:8080"
    command: |
      sh -c "
        echo `echo ${AUTH_CREDENTIALS} | base64 -d` > ${AUTH_CREDENTIALS_FILE}
        ./api --cfg=/configs/config.yml
      "
  
  ti-test:
    build:
      context: ../
      dockerfile: Dockerfile
      target: builder
    image: timeline-investigator:build
    container_name: ti-test
    restart: on-failure:5
    depends_on: 
      - ti-api
      - elasticsearch
    stdin_open: true
    tty: true    
    environment:
      - TEST_URL=http://ti-api:8080/api/
      - TEST_SECRET=super-secret
    entrypoint: go test ./tests -v

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
    container_name: elasticsearch
    ports:
      - 9200:9200
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: "${DOCKER_HEALTHCHECK_TEST:-curl http://localhost:9200/_cluster/health}"
      interval: "10s"
      timeout: "3s"
      start_period: "5s"
      retries: 3

  kibana:
    image: docker.elastic.co/kibana/kibana:7.8.1
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
